#!/usr/bin/env bash

currdir="$PWD"
homebin="$HOME/bin"
confdir="$HOME/.config"

error_exit() {
  msg="$1"
  echo -e "ERROR: ${msg}" 1>&2
  exit 1
}

relink_file() {
  src="$1"
  target="$2"

  if [ -f "$target" ]; then
    echo "$target exists, creating backup"
    cp "$target" "$target.bak" || error_exit "error backing up $target"
    rm "$target"
  fi

  ln -s "$src" "$target"
}

# create .config if not existent
if ! test -d "$confdir"; then
    mkdir "$confdir"
fi

# update home bin
chmod -R 0755 bin/
rsync -pru bin/ "$homebin/"

# set up fzf links
relink_file "$HOME/.opt/fzf/bin/fzf" "$homebin/fzf"
relink_file "$HOME/.opt/fzf/bin/fzf-tmux" "$homebin/fzf-tmux"

# update config
rsync -ru "$currdir/bash/" "$confdir/bash/"
# set up bash links
relink_file "$confdir/bash/bashrc" "$HOME/.bashrc"
relink_file "$confdir/bash/profile" "$HOME/.profile"
relink_file "$confdir/bash/ls/dir_colors" "$HOME/.dircolors"

if test -x fish; then
  rsync -ru "$currdir/fish/" "$confdir/fish/"
fi

if test -x conda; then
  rsync -ru "$currdir/conda/" "$confdir/conda/"
  # set up conda links
  relink_file "$confdir/conda/condarc" "$HOME/.condarc"
fi

if test -x vim; then
  rsync -ru "$currdir/vim/" "$confdir/vim/"
  # set up vim links
  relink_file "$confdir/vim/vimrc" "$HOME/.vimrc"
fi

if test -x nvim; then
  rsync -ru "$currdir/nvim/" "$confdir/nvim/"
fi
